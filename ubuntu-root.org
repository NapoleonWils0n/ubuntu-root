#+TITLE: ubuntu root dotfiles
#+STARTUP: content
#+STARTUP: overview hideblocks
#+OPTIONS: num:nil author:nil
#+PROPERTY: header-args :mkdirp yes
* tangle dotfiles
** tangle document

C-c C-v t

** tangle only one code block

C-u C-c C-v t

** tangle from the command line

tangle file from the command line
where ~/git/ubuntu-dotfiles/ubuntu-dotfiles.org is the path of the file to tangle

#+begin_src sh
emacs --batch -l org --eval '(org-babel-tangle-file "~/git/ubuntu-dotfiles/ubuntu-dotfiles.org")'
#+end_src
* ubuntu root dotfiles
** doas

#+NAME: doas
#+BEGIN_SRC sh
# check config : doas -C /etc/doas.conf

# allow user
permit keepenv djwilcox

# apt update and upgrade without a password
permit nopass djwilcox cmd apt args update
permit nopass djwilcox cmd apt args upgrade

# mount and unmount drives 
permit nopass djwilcox cmd mount 
permit nopass djwilcox cmd umount 

# zfs and zpool
permit nopass djwilcox cmd zfs 
permit nopass djwilcox cmd zpool 

# allow root to switch to our user
permit nopass setenv { PATH } root as djwilcox

# namespace command
permit nopass setenv { PATH } djwilcox cmd namespace

# vpn
permit nopass djwilcox cmd vpn-netns

# root as root
permit nopass keepenv setenv { PATH } root as root
#+END_SRC

*** doas tangle
:PROPERTIES:
:ORDERED:  t
:END:

+ home dir

#+NAME: doas-root-dir
#+BEGIN_SRC conf :noweb yes :tangle "/doas::/etc/doas.conf"
<<doas>>
#+END_SRC
  
+ current dir

#+NAME: doas-current-dir
#+BEGIN_SRC conf :noweb yes :tangle "etc/doas.conf"
<<doas>>
#+END_SRC

** /usr/local/bin
*** /usr/local/bin config
**** blackrain

#+NAME: blackrain
#+begin_src sh
#!/bin/sh

# transmission fzf menu

# if transmission-daemon isnt running start it
transmission-remote -l >/dev/null 2>&1 || transmission-daemon && sleep 0.1

# input = list of torrents
input=$(transmission-remote -l \
| head -n -1 \
| awk 'NR == 1; NR > 1 {print $0 | "sort -k 2 -n"}' \
| fzf --multi --info=inline --layout=reverse --header-lines=1 --delimiter='\n' --prompt='Select Torrents: ' | awk '{print $1}')


# exit script if no torrents are selected (e.g hit ESC)
if [ "${input}" = "" ]; then exit; fi


# main trd function
trd() {
    printf "%s\n" "${input}" | \
    while read line
    do
      transmission-remote -t"${line}" "${1}" ;
    done
    }


# get files from torrent
get_files() {
    printf "%s\n" "${input}" | \
    while read line
    do
	selection=$(transmission-remote -t"${line}" --info-files \
		| fzf --multi --info=inline --layout=reverse --header-lines=2 --delimiter='\n' --prompt='Select Files: ' \
		| awk -F':' -v RS="\n" '{print $1}' | awk 'a++{printf ","}{printf "%s", $1}')
	transmission-remote -t"${line}" -g"${selection}";
    done
    }


# dont get files from torrent
noget_files() {
    printf "%s\n" "${input}" | \
    while read line
    do
	selection=$(transmission-remote -t"${line}" --info-files \
		| fzf --multi --info=inline --layout=reverse --header-lines=2 --delimiter='\n' --prompt='Select Files: ' \
		| awk -F':' -v RS="\n" '{print $1}' | awk 'a++{printf ","}{printf "%s", $1}')
	transmission-remote -t"${line}" -G"${selection}";
    done
    }


# fzf prompt variables spaces to line up menu options
start_menu='start      - start torrent'
pause_menu='pause      - pause torrent'
info_menu='info       - show torrent info'
files_menu='files      - show files in torrent'
get_files_menu='get        - get items in torrent'
noget_files_menu='noget      - noget items in torrent'
peers_menu='peers      - ask for more peers'
remove_menu='remove     - remove torrent'
purge_menu='purge      - remove torrent and data'


# fzf prompt to specify function to run on links from ytfzf
menu=$(printf "%s\n" \
	      "${start_menu}" \
	      "${pause_menu}" \
	      "${info_menu}" \
	      "${files_menu}" \
	      "${get_files_menu}" \
	      "${noget_files_menu}" \
	      "${peers_menu}" \
	      "${remove_menu}" \
	      "${purge_menu}" \
	      | fzf --delimiter='\n' --prompt='Run transmission function: ' --info=inline --layout=reverse --no-multi)


# case statement to run function based on fzf prompt output
case "${menu}" in
   start*) trd --start;;
   pause*) trd --stop;;
   info*) trd --info;;
   peers*) trd --reannounce;;
   files*) trd --info-files;;
   get*) get_files;;
   noget*) noget_files;;
   remove*) trd --remove;;
   purge*) trd --remove-and-delete;;
   ,*) exit;;
esac
#+end_src

**** chromium-netns

#+NAME: chromium-netns
#+begin_src sh
#!/bin/sh

sh -c "HOME=${HOME} PULSE_SERVER=/run/user/$(id -u "${USER}")/pulse/native PULSE_COOKIE=/home/${USER}/.config/pulse/cookie \
BAMF_DESKTOP_FILE_HINT=/var/lib/snapd/desktop/applications/chromium_chromium.desktop \
/snap/chromium/current/usr/lib/chromium-browser/chrome"
#+end_src

**** firefox-netns

#+NAME: firefox-netns
#+begin_src sh
#!/bin/sh

# firefox namespace

sh -c "HOME=${HOME} PULSE_SERVER=/run/user/$(id -u "${USER}")/pulse/native PULSE_COOKIE=/home/${USER}/.config/pulse/cookie \
BAMF_DESKTOP_FILE_HINT=/var/lib/snapd/desktop/applications/firefox_firefox.desktop \
/snap/firefox/current/usr/lib/firefox/firefox"
#+end_src

**** magnet-add

#+NAME: magnet-add
#+begin_src sh
#!/bin/sh

# transmission add magnet link from browser

transmission-remote --add "$@"
#+end_src

**** namespace

#+NAME: namespace
#+begin_src sh
#!/bin/sh

# open in namespace
ip netns exec vpn doas -u djwilcox -- "$@"
#+end_src

**** netns-vpn

#+NAME: netns-vpn
#+begin_src sh
#!/bin/sh

# openvpn split route with namespace
#===================================

# openvpn up script
up() {
    # create network namespace
    ip netns add vpn || true

    # bring up loop device
    ip netns exec vpn ip link set dev lo up

    # move VPN tunnel to netns
    ip link set dev "$1" up netns vpn mtu "$2"

    # configure tunnel in netns
    ip netns exec vpn ip addr add dev "$1" \
            "$4/${ifconfig_netmask:-30}" \
            ${ifconfig_broadcast:+broadcast "$ifconfig_broadcast"}
    if [ -n "$ifconfig_ipv6_local" ]; then
            ip netns exec vpn ip addr add dev "$1" \
                    "$ifconfig_ipv6_local"/112
    fi

    # set route in netns
    ip netns exec vpn ip route add default via "$route_vpn_gateway"

    # create vpn namespace directory
    mkdir -p /etc/netns/vpn

    # create resolv.conf with 
    echo 'nameserver 127.0.0.1' > /etc/netns/vpn/resolv.conf 

    # stop unbound dns server
    systemctl stop unbound.service

    # sleep for 1 second
    sleep 1

    # start unbound dns server in vpn namespace
    systemctl start unbound-netns.service
}

# openvpn down script
down() {
    # remove namespace and delete resolv.conf
    rm -rf /etc/netns/vpn
    ip netns delete vpn

    # restart unbound dns server
    systemctl stop unbound-netns.service

    # sleep for 1 second
    sleep 1

    # start unbound dns server
    systemctl start unbound.service

    true
}

"$script_type" "$@"
#+end_src

*** /usr/local/bin tangle
**** blackrain tangle
:PROPERTIES:
:ORDERED:  t
:END:

+ root dir

#+NAME: blackrain-root-dir
#+PROPERTY: :tangle-mode (identity #o755)
#+BEGIN_SRC conf :noweb yes :tangle "/doas::/usr/local/bin/blackrain"
<<blackrain>>
#+END_SRC
  
+ current dir

#+NAME: blackrain-current-dir
#+BEGIN_SRC conf :noweb yes :tangle "usr/local/bin/blackrain"
<<blackrain>>
#+END_SRC

**** chromium-netns tangle
:PROPERTIES:
:ORDERED:  t
:END:

+ root dir

#+NAME: chromium-netns-root-dir
#+PROPERTY: :tangle-mode (identity #o755)
#+BEGIN_SRC conf :noweb yes :tangle "/doas::/usr/local/bin/chromium-netns"
<<chromium-netns>>
#+END_SRC
  
+ current dir

#+NAME: chromium-netns-current-dir
#+BEGIN_SRC conf :noweb yes :tangle "usr/local/bin/chromium-netns"
<<chromium-netns>>
#+END_SRC

**** firefox-netns tangle
:PROPERTIES:
:ORDERED:  t
:END:

+ root dir

#+NAME: firefox-netns-root-dir
#+PROPERTY: :tangle-mode (identity #o755)
#+BEGIN_SRC conf :noweb yes :tangle "/doas::/usr/local/bin/firefox-netns"
<<firefox-netns>>
#+END_SRC
  
+ current dir

#+NAME: firefox-netns-current-dir
#+BEGIN_SRC conf :noweb yes :tangle "usr/local/bin/firefox-netns"
<<firefox-netns>>
#+END_SRC

**** magnet-add tangle
:PROPERTIES:
:ORDERED:  t
:END:

+ root dir

#+NAME: magnet-add-root-dir
#+PROPERTY: :tangle-mode (identity #o755)
#+BEGIN_SRC conf :noweb yes :tangle "/doas::/usr/local/bin/magnet-add"
<<magnet-add>>
#+END_SRC
  
+ current dir

#+NAME: magnet-add-current-dir
#+BEGIN_SRC conf :noweb yes :tangle "usr/local/bin/magnet-add"
<<magnet-add>>
#+END_SRC

**** namespace tangle
:PROPERTIES:
:ORDERED:  t
:END:

+ root dir

#+NAME: namespace-root-dir
#+PROPERTY: :tangle-mode (identity #o755)
#+BEGIN_SRC conf :noweb yes :tangle "/doas::/usr/local/bin/namespace"
<<namespace>>
#+END_SRC
  
+ current dir

#+NAME: namespace-current-dir
#+BEGIN_SRC conf :noweb yes :tangle "usr/local/bin/namespace"
<<namespace>>
#+END_SRC


**** netns-vpn tangle
:PROPERTIES:
:ORDERED:  t
:END:

+ root dir

#+NAME: netns-vpn-root-dir
#+PROPERTY: :tangle-mode (identity #o755)
#+BEGIN_SRC conf :noweb yes :tangle "/doas::/usr/local/bin/netns-vpn"
<<netns-vpn>>
#+END_SRC
  
+ current dir

#+NAME: netns-vpn-current-dir
#+BEGIN_SRC conf :noweb yes :tangle "usr/local/bin/netns-vpn"
<<netns-vpn>>
#+END_SRC
